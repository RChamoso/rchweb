var Fuel,Wick;(function(){function e(e){return e.replace(/(^\s*\n|\n\s*$)/gi,"")}function t(e,t){var n,r;for(n=0,r="";n<t;n++)r+=" ";return e.replace(/\t/g,r)}Lighter=new Class({Implements:[Options],name:"Lighter",options:{altLines:"",clipboard:null,container:null,editable:!1,flame:"standard",fuel:"standard",id:null,indent:2,matchType:"standard",mode:"pre",path:null,strict:!1},initialize:function(n,r){this.setOptions(r),this.id=this.options.id||this.name+"_"+Date.now(),this.codeblock=$(n),this.container=$(this.options.container),this.code=e(this.codeblock.get("html")).replace(/&lt;/gim,"<").replace(/&gt;/gim,">").replace(/&amp;/gim,"&"),this.options.indent>-1&&(this.code=t(this.code,this.options.indent)),this.getPath(),this.getClass(),this.builder=new Hash({inline:this.createLighter.pass("code",this),pre:this.createLighter.pass("pre",this),ol:this.createLighterWithLines.pass([["ol"],["li"]],this),div:this.createLighterWithLines.pass([["div"],["div","span"],!0,"span"],this),table:this.createLighterWithLines.pass([["table","tbody"],["tr","td"],!0,"td"],this)}),Lighter.scripts=Lighter.scripts||{},Lighter.stylesheets=Lighter.stylesheets||{},this.loadFuel()},loadFuel:function(){try{this.fuel=new Fuel[this.options.fuel](this.code,{matchType:this.options.matchType,strict:this.options.strict}),this.light()}catch(e){this.loadScript(this.options.fuel,"Fuel."+this.options.fuel+".js",{load:this.loadFuel.bind(this),error:function(){this.options.fuel="standard",this.loadFuel()}.bind(this)})}},light:function(){this.element=this.toElement(),this.container?(this.container.empty(),this.element.inject(this.container)):(this.codeblock.setStyle("display","none"),this.element.inject(this.codeblock,"after"),this.options.clipboard&&this.loadClipboard())},unlight:function(){$(this).setStyle("display","none"),this.codeblock.setStyle("display","inherit")},loadClipboard:function(){var e;try{e=new ZeroClipboard.Client,e.setPath(this.options.path),e.glue($(this.options.clipboard)),e.setText(this.code),e.addEventListener("complete",function(e,t){alert("Copied text to clipboard:\n"+t)})}catch(t){return this.loadScript("clipboard","ZeroClipboard.js",{load:this.loadClipboard.bind(this),error:Function.from()}),!1}},getPath:function(){Lighter.path||$$("head script").each(function(e){var t=e.src.split("?",1),n=/Lighter(\.full|\.lite)?\.js$/gi;t[0].match(n)&&(Lighter.path=t[0].replace(n,""))}),this.options.path||(this.options.path=Lighter.path)},getClass:function(){var e=this.codeblock.get("class").split(" "),t=[null,null];switch(e.length){case 0:break;case 1:t=e[0].split(":");break;default:t=e[0].split(":")}t[0]&&(this.options.fuel=t[0]),t[1]&&(this.options.flame=t[1])},loadScript:function(e,t,n){Lighter.scripts[e]!=undefined?Lighter.scripts[e].addEvents({load:n.load,error:n.error,readystatechange:function(){["loaded","complete"].contains(this.readyState)&&n.load()}}):Lighter.scripts[e]=(new Element("script",{src:this.options.path+t+"?"+Date.now(),type:"text/javascript",events:{load:n.load,error:n.error,readystatechange:function(){["loaded","complete"].contains(this.readyState)&&n.load()}}})).inject(document.head)},loadStylesheet:function(e,t){Lighter.stylesheets[e]||(Lighter.stylesheets[e]=(new Element("link",{rel:"stylesheet",type:"text/css",media:"screen",href:this.options.path+t+"?"+Date.now()})).inject(document.head))},createLighter:function(e){var t=new Element(e,{"class":this.options.flame+this.name}),n=0;return this.fuel.wicks[0]==undefined?t.appendText(this.code):(this.fuel.wicks.each(function(e){t.appendText(this.code.substring(n,e.index)),this.insertAndKeepEl(t,e.text,e.type),n=e.index+e.text.length},this),n<this.code.length&&t.appendText(this.code.substring(n,this.code.length))),t},createLighterWithLines:function(e,t,n,r){var i,s=new Element(e[0],{"class":this.options.flame+this.name,id:this.id}),o=new Element(t[0]),u=1,a=0,f=null;e[0]=="table"&&s.set("cellpadding",0).set("cellspacing",0).set("border",0),e[1]&&(s=(new Element(e[1])).inject(s)),t[1]&&(o=(new Element(t[1])).inject(o)),o.addClass(this.options.flame+"line"),n&&(u=this.insertLineNum(o,u,r)),this.fuel.wicks.each(function(e){var i;if(a!=e.index){f=this.code.substring(a,e.index).split("\n");for(i=0;i<f.length;i++)i<f.length-1?(f[i]===""&&(f[i]=" "),o=this.insertAndMakeEl(o,s,f[i],t),n&&(u=this.insertLineNum(o,u,r))):this.insertAndKeepEl(o,f[i])}f=e.text.split("\n");for(i=0;i<f.length;i++)i<f.length-1?(o=this.insertAndMakeEl(o,s,f[i],t,e.type),n&&(u=this.insertLineNum(o,u,r))):this.insertAndKeepEl(o,f[i],e.type);a=e.end},this);if(a<=this.code.length){f=this.code.substring(a,this.code.length).split("\n");for(i=0;i<f.length;i++)o=this.insertAndMakeEl(o,s,f[i],t),n&&(u=this.insertLineNum(o,u,r))}return this.options.altLines!==""&&(this.options.altLines=="hover"?s.getElements("."+this.options.flame+"line").addEvents({mouseover:function(){this.toggleClass("alt")},mouseout:function(){this.toggleClass("alt")}}):t[1]?s.getChildren(":"+this.options.altLines).getElement("."+this.options.flame+"line").addClass("alt"):s.getChildren(":"+this.options.altLines).addClass("alt")),t[1]?(s.getFirst().getChildren().addClass(this.options.flame+"first"),s.getLast().getChildren().addClass(this.options.flame+"last")):(s.getFirst().addClass(this.options.flame+"first"),s.getLast().addClass(this.options.flame+"last")),e[1]&&(s=s.getParent()),s},insertAndKeepEl:function(e,t,n){var r;t.length>0&&(r=new Element("span",{text:t}),n&&r.addClass(this.fuel.aliases[n]||n),r.inject(e))},insertAndMakeEl:function(e,t,n,r,i){var s;return this.insertAndKeepEl(e,n,i),r[1]&&(e=e.getParent()),e.inject(t),s=new Element(r[0]),r[1]&&(s=(new Element(r[1])).inject(s)),s.addClass(this.options.flame+"line"),s},insertLineNum:function(e,t,n){var r=new Element(n,{text:t++,"class":this.options.flame+"num"});return r.inject(e.getParent(),"top"),t},toElement:function(){return this.element||(this.element=this.builder[this.options.mode](),this.options.editable&&this.element.set("contenteditable","true")),this.element},toString:function(){return this.code}}),Element.implement({light:function(e){return new Lighter(this,e)}})})(),Fuel=new Class({Implements:[Options],options:{matchType:"standard",strict:!1},language:"",patterns:new Hash,keywords:new Hash,delimiters:new Hash({start:null,end:null}),common:{slashComments:/(?:^|[^\\])\/\/.*$/gm,poundComments:/#.*$/gm,multiComments:/\/\*[\s\S]*?\*\//gm,aposStrings:/'[^'\\]*(?:\\.[^'\\]*)*'/gm,quotedStrings:/"[^"\\]*(?:\\.[^"\\]*)*"/gm,multiLineSingleQuotedStrings:/'[^'\\]*(?:\\.[^'\\]*)*'/gm,multiLineDoubleQuotedStrings:/"[^"\\]*(?:\\.[^"\\]*)*"/gm,multiLineStrings:/'[^'\\]*(?:\\.[^'\\]*)*'|"[^"\\]*(?:\\.[^"\\]*)*"/gm,singleQuotedString:/'[^'\\\r\n]*(?:\\.[^'\\\r\n]*)*'/gm,doubleQuotedString:/"[^"\\\r\n]*(?:\\.[^"\\\r\n]*)*"/gm,strings:/'[^'\\\r\n]*(?:\\.[^'\\\r\n]*)*'|"[^"\\\r\n]*(?:\\.[^"\\\r\n]*)*"/gm,properties:/\.([\w]+)\s*/gi,methodCalls:/\.([\w]+)\s*\(/gm,functionCalls:/\b([\w]+)\s*\(/gm,brackets:/\{|\}|\(|\)|\[|\]/g,numbers:/\b((?:(\d+)?\.)?[0-9]+|0x[0-9A-F]+)\b/gi},initialize:function(e,t,n){this.setOptions(t),this.wicks=n||[],this.code=e,this.aliases=$H(),this.rules=$H(),this.builder=new Hash({standard:this.findMatches,lazy:this.findMatchesLazy}),t.strict||(this.delimiters.start&&this.addFuel("delimBeg",this.delimiters.start,"de1"),this.delimiters.end&&this.addFuel("delimEnd",this.delimiters.end,"de2")),this.keywords.each(function(e,t){e.csv!=""&&this.addFuel(t,this.csvToRegExp(e.csv,e.mod||"g"),e.alias)},this),this.patterns.each(function(e,t){this.addFuel(t,e.pattern,e.alias)},this);var r=0,i=this.code.length,s="",o=this.delimiters,u=[],a=null,f=null;if(!t.strict)Object.append(u,this.builder[t.matchType].pass(this.code,this)());else if(o.start&&o.end)while((a=o.start.exec(this.code))!=null)o.end.lastIndex=o.start.lastIndex,(f=o.end.exec(this.code))!=null&&(u.push(new Wick(a[0],"de1",a.index)),r=o.start.lastIndex,i=f.index-1,s=this.code.substring(r,i),u.extend(this.builder[t.matchType].pass([s,r],this)()),u.push(new Wick(f[0],"de2",f.index)));this.wicks=u},addFuel:function(e,t,n){this.rules[e]=t,this.addAlias(e,n)},addAlias:function(e,t){this.aliases[e]=t||e},csvToRegExp:function(e,t){return RegExp("\\b("+e.replace(/,\s*/g,"|")+")\\b",t)},delimToRegExp:function(e,t,n,r,i){e=e.escapeRegExp(),t&&(t=t.escapeRegExp()),n=n?n.escapeRegExp():e;var s=t?e+"[^"+n+t+"\\n]*(?:"+t+".[^"+n+t+"\\n]*)*"+n:e+"[^"+n+"\\n]*"+n;return RegExp(s+(i||""),r||"")},strictRegExp:function(){var e="(";for(var t=0;t<arguments.length;t++)e+=arguments[t].escapeRegExp(),e+=t<arguments.length-1?"|":"";return e+=")",RegExp(e,"gim")},findMatches:function(e,t){var n=[],r=0,i=e.length;insertIndex=0,match=null,type=null,newWick=null,rule=null,rules={},currentMatch=null,futureMatch=null,t=t||0,this.rules.each(function(e,t){rules[t]={pattern:e,nextIndex:0}},this);while(r<e.length){i=e.length,match=null;for(rule in rules){rules[rule].pattern.lastIndex=r,currentMatch=rules[rule].pattern.exec(e);if(currentMatch===null)delete rules[rule];else{if(currentMatch.index<i||currentMatch.index==i&&match[0].length<currentMatch[0].length)match=currentMatch,type=rule,i=currentMatch.index;rules[rule].nextIndex=rules[rule].pattern.lastIndex-currentMatch[0].length}}if(match==null)break;index=match[1]&&match[0].contains(match[1])?match.index+match[0].indexOf(match[1]):match.index,newWick=new Wick(match[1]||match[0],type,index+t),n.push(newWick),futureMatch=rules[type].pattern.exec(e),futureMatch?rules[type].nextIndex=rules[type].pattern.lastIndex-futureMatch[0].length:rules[type].nextIndex=e.length;var s=e.length;for(rule in rules)rules[rule].nextIndex<s&&(s=rules[rule].nextIndex);r=Math.max(s,newWick.end-t)}return n},findMatchesLazy:function(e,t){var n=this.wicks,r=null;return index=0,t=t||0,this.rules.each(function(i,s){while((r=i.exec(e))!=null)index=r[1]&&r[0].contains(r[1])?r.index+r[0].indexOf(r[1]):r.index,n.push(new Wick(r[1]||r[0],s,index+t))},this),this.purgeWicks(n)},purgeWicks:function(e){e=e.sort(this.compareWicks);for(var t=0,n=0;t<e.length;t++){if(e[t]==null)continue;for(n=t+1;n<e.length&&e[t]!=null;n++){if(e[n]==null)continue;if(e[n].isBeyond(e[t]))break;e[n].overlaps(e[t])?e[t]=null:e[t].contains(e[n])&&(e[n]=null)}}return e.clean()},compareWicks:function(e,t){return e.index-t.index}}),Fuel.standard=new Class({Extends:Fuel,initialize:function(e,t,n){this.parent(e,t,n)}}),Wick=new Class({initialize:function(e,t,n){this.text=e,this.type=t,this.index=n,this.length=this.text.length,this.end=this.index+this.length},contains:function(e){return e.index>=this.index&&e.index<this.end},isBeyond:function(e){return this.index>=e.end},overlaps:function(e){return this.index==e.index&&this.length>e.length},toString:function(){return this.index+" - "+this.text+" - "+this.end}}),Fuel.css=new Class({Extends:Fuel,language:"css",initialize:function(e,t){this.keywords=new Hash({css1:{csv:"background-attachment, background-color, background-image, background-position, background-repeat, background, border-bottom, border-bottom-width, border-color, border-left, border-left-width, border-right, border-right-width, border-style, border-top, border-top-width, border-width, border, clear, color, display, float, font-family, font-size, font-style, font-variant, font-weight, font, height, letter-spacing, line-height, list-style-image, list-style-position, list-style-type, list-style, margin-bottom, margin-left, margin-right, margin-top, margin, padding-bottom, padding-left, padding-right, padding-top, padding, text-align, text-decoration, text-indent, text-transform, vertical-align, white-space, width, word-spacing",alias:"kw1"},css2:{csv:"azimuth, border-bottom-color, border-bottom-style, border-collapse, border-left-color, border-left-style, border-right-color, border-right-style, border-spacing, border-top-color, border-top-style, bottom, caption-side, clip, content, counter-increment, counter-reset, cue, cue-after, cue-before, cursor, direction, elevation, empty-cells, left, max-height, max-width, min-height, min-width, orphans, outline, outline-color, outline-style, outline-width, overflow, page-break-after, page-break-before, page-break-inside, pause, pause-after, pause-before, pitch, pitch-range, play-during, position, quotes, richness, right, speak, speak-header, speak-numeral, speak-punctuation, speech-rate, stress, table-layout, top, unicode-bidi, visibility, voice-family, volume, widows, z-index",alias:"kw1"},css3:{csv:"alignment-adjust, alignment-baseline, appearance, background-break, background-clip, background-origin, background-size, baseline-shift, binding, bookmark-label, bookmark-level, bookmark-target, border-bottom-left-radius, border-bottom-right-radius, border-break, border-image, border-length, border-radius, border-top-left-radius, border-top-right-radius, box-align, box-direction, box-flex, box-flex-group, box-lines, box-orient, box-pack, box-shadow, box-sizing, color-profile, column-break-after, column-break-before, column-count, column-fill, column-gap, column-rule, column-rule-color, column-rule-style, column-rule-width, column-span, column-width, columns, crop, display-model, display-role, dominant-baseline, drop-initial-after-adjust, drop-initial-after-align, drop-initial-before-adjust, drop-initial-before-align, drop-initial-size, drop-initial-value, fit, fit-position, float-offset, font-effect, font-emphasize, font-emphasize-position, font-emphasize-style, font-size-adjust, font-smooth, font-stretch, grid-columns, grid-rows, hanging-punctuation, hyphenate-after, hyphenate-before, hyphenate-character, hyphenate-lines, hyphenate-resource, hyphens, icon, image-orientation, image-resolution, inline-box-align, line-stacking, line-stacking-ruby, line-stacking-shift, line-stacking-strategy, mark, mark-after, mark-before, marker-offset, marks, marquee-direction, marquee-play-count, marquee-speed, marquee-style, move-to, nav-down, nav-index, nav-left, nav-right, nav-up, opacity, outline-offset, overflow-style, overflow-x, overflow-y, page, page-policy, phonemes, presentation-level, punctuation-trim, rendering-intent, resize, rest, rest-after, rest-before, rotation, rotation-point, ruby-align, ruby-overhang, ruby-position, ruby-span, size, string-set, tab-side, target, target-name, target-new, target-position, text-align-last, text-emphasis, text-height, text-justify, text-outline, text-replace, text-shadow, text-wrap, voice-balance, voice-duration, voice-pitch, voice-pitch-range, voice-rate, voice-stress, voice-volume, white-space-collapse, word-break, word-wrap",alias:"kw2"},values:{csv:"100, 200, 300, 400, 500, 600, 700, 800, 900, above, absolute, always, aqua, armenian, auto, avoid, baseline, below, bidi-override, black, blink, block, blue, bold, bolder, both, bottom, break-all, break-strict, break-word, break, capitalize, caption, center, circle, cjk-ideographic, close-quote, collapse, compact, condensed, crop, cross, crosshair, dashed, decimal-leading-zero, decimal, default, disc, dotted, double, e-resize, embed, expanded, extra-condensed, extra-expanded, fixed, fuchsia, georgian, gray, green, groove, hand, hebrew, help, hidden, hide, higher, hiragana-iroha, hiragana, icon, inherit, inline-table, inline, inset, inside, invert, italic, justify, katakana-iroha, katakana, keep-all, konq-center, landscape, large, larger, left, level, light, lighter, lime, line-through, list-item, loose, loud, lower-alpha, lower-greek, lower-latin, lower-roman, lowercase, lower, ltr, marker, maroon, medium, menu, message-box, middle, mix, move, n-resize, narrower, navy, ne-resize, never, no-close-quote, no-open-quote, no-repeat, none, normal, nowrap, nw-resize, oblique, olive, open-quote, outset, outside, overline, pointer, portrait, pre-wrap, pre, purple, red, relative, repeat, repeat-x, repeat-y, ridge, right, rtl, run-in, s-resize, scroll, se-resize, semi-condensed, semi-expanded, separate, show, silver, small-caps, small-caption, smaller, small, solid, square, static-position, static, status-bar, sub, super, sw-resize, table-caption, table-cell, table-column-group, table-column, table-footer-group, table-header-group, table-row, table-row-group, table, teal, text-bottom, text-top, text, thick, thin, top, transparent, ultra-condensed, ultra-expanded, underline, upper-alpha, upper-latin, upper-roman, uppercase, visible, w-resize, wait, white, wider, x-large, x-small, xx-large, xx-small, yellow",alias:"kw3"}}),this.patterns=new Hash({multiComments:{pattern:this.common.multiComments,alias:"co1"},strings:{pattern:this.common.strings,alias:"st0"},selectors:{pattern:/([^\}\n]+)\{/gi,alias:"se0"},uri:{pattern:/url\s*\([^\)]*\)/gi,alias:"kw4"},units:{pattern:/\b(\d+[\.\d+]?\s*(px|pt|em|ex|cm|in|mm|pc|%)?)/gi,alias:"nu0"},hexColors:{pattern:/(#[A-F0-9]{3}([A-F0-9]{3})?)\b/gi,alias:"kw3"},rgbColors:{pattern:/(rgb\s*\(([1-2]?[0-9]{2}(\,\s*)?){3}\))/g,alias:"kw3"}}),this.delimiters=new Hash({start:this.strictRegExp('<style type="text/css">'),end:this.strictRegExp("</style>")}),this.parent(e,t)}}),Fuel.html=new Class({Extends:Fuel,language:"html",initialize:function(e,t){var n,r,i,s,o,u;t.matchType="lazy",this.patterns=new Hash({comments:{pattern:/(?:\&lt;|<)!--[\s\S]*?--(?:\&gt;|>)/gim,alias:"co1"},cdata:{pattern:/(?:\&lt;|<)!\[CDATA\[[\s\S]*?\]\](?:\&gt;|>)/gim,alias:"st1"},closingTags:{pattern:/(?:\&lt;|<)\/[A-Z][A-Z0-9]*?(?:\&gt;|>)/gi,alias:"kw1"},doctype:{pattern:/(?:\&lt;|<)!DOCTYPE[\s\S]+?(?:\&gt;|>)/gim,alias:"st2"}}),n=/((?:\&lt;|<)[A-Z][A-Z0-9]*)(.*?)(\/?(?:\&gt;|>))/gi,r=/\b([\w-]+)([ \t]*)(=)([ \t]*)(['"][^'"]+['"]|[^'" \t]+)/gi,i=[],s=null,o=null,u=0;while((s=n.exec(e))!=null){i.push(new Wick(s[1],"kw1",s.index));while((o=r.exec(s[2]))!=null)u=s.index+s[1].length+o.index,i.push(new Wick(o[1],"kw2",u)),u+=o[1].length+o[2].length,i.push(new Wick(o[3],"kw1",u)),u+=o[3].length+o[4].length,i.push(new Wick(o[5],"kw3",u));i.push(new Wick(s[3],"kw1",s.index+s[1].length+s[2].length))}this.parent(e,t,i)}}),Fuel.js=new Class({Extends:Fuel,language:"js",initialize:function(e,t){this.keywords=new Hash({commonKeywords:{csv:"as, break, case, catch, continue, delete, do, else, eval, finally, for, if, in, is, item, instanceof, return, switch, this, throw, try, typeof, void, while, write, with",alias:"kw1"},langKeywords:{csv:"class, const, default, debugger, export, extends, false, function, import, namespace, new, null, package, private, protected, public, super, true, use, var",alias:"kw2"},windowKeywords:{csv:"alert, back, blur, close, confirm, focus, forward, home, navigate, onblur, onerror, onfocus, onload, onmove, onresize, onunload, open, print, prompt, scroll, status, stop",alias:"kw3"}}),this.patterns=new Hash({slashComments:{pattern:this.common.slashComments,alias:"co1"},multiComments:{pattern:this.common.multiComments,alias:"co2"},strings:{pattern:this.common.strings,alias:"st0"},methodCalls:{pattern:this.common.properties,alias:"me0"},brackets:{pattern:this.common.brackets,alias:"br0"},numbers:{pattern:/\b((([0-9]+)?\.)?[0-9_]+([e][-+]?[0-9]+)?|0x[A-F0-9]+)\b/gi,alias:"nu0"},regex:{pattern:this.delimToRegExp("/","\\","/","g","[gimy]*"),alias:"re0"},symbols:{pattern:/\+|-|\*|\/|%|!|@|&|\||\^|\<|\>|=|,|\.|;|\?|:/g,alias:"sy0"}}),this.delimiters=new Hash({start:this.strictRegExp('<script type="text/javascript">','<script language="javascript">'),end:this.strictRegExp("</script>")}),this.parent(e,t)}}),Fuel.php=new Class({Extends:Fuel,language:"php",initialize:function(e,t,n){this.keywords=new Hash({keywords:{csv:"abstract, and, as, break, case, catch, cfunction, class, clone, const, continue, declare, default, do, else, elseif, enddeclare, endfor, endforeach, endif, endswitch, endwhile, extends, final, for, foreach, function, global, goto, if, implements, interface, instanceof, namespace, new, old_function, or, private, protected, public, static, switch, throw, try, use, var, while, xor",alias:"kw1"},langConstants:{csv:"__CLASS__, __DIR__, __FILE__, __FUNCTION__, __METHOD__, __NAMESPACE__, DEFAULT_INCLUDE_PATH, E_ALL, E_COMPILE_ERROR, E_COMPILE_WARNING, E_CORE_ERROR, E_CORE_WARNING, E_ERROR, E_NOTICE, E_PARSE, E_STRICT, E_USER_ERROR, E_USER_NOTICE, E_USER_WARNING, E_WARNING, PEAR_EXTENSION_DIR, PEAR_INSTALL_DIR, PHP_BINDIR, PHP_CONFIG_FILE_PATH, PHP_DATADIR, PHP_EXTENSION_DIR, PHP_LIBDIR, PHP_LOCALSTATEDIR, PHP_OS, PHP_OUTPUT_HANDLER_CONT, PHP_OUTPUT_HANDLER_END, PHP_OUTPUT_HANDLER_START, PHP_SYSCONFDIR, PHP_VERSION",alias:"kw1"},constructs:{csv:"array, die, echo, empty, exit, eval, include, include_once, isset, list, require, require_once, return, print, unset",alias:"kw1"},commonFuncs:{csv:"abs, addcslashes, addslashes, aggregate, apache_child_terminate, apache_get_version, apache_lookup_uri, apache_note, apache_request_headers, apache_response_headers, apache_setenv, array_change_key_case, array_chunk, array_count_values, array_diff, array_diff_assoc, array_fill, array_filter, array_flip, array_intersect, array_intersect_assoc, array_key_exists, array_keys, array_map, array_merge, array_merge_recursive, array_multisort, array_pad, array_pop, array_push, array_rand, array_reduce, array_reverse, array_search, array_shift, array_slice, array_splice, array_sum, array_unique, array_unshift, array_values, array_walk, arsort, asort, assert, assert_options, base64_decode, base64_encode, base_convert, basename, bin2hex, bindec, ceil, chdir, checkdate, chop, chown, chunk_split, clearstatcache, closedir, compact, connection_aborted, connection_status, constant, copy, count, count_chars, crc32, crypt, ctype_alnum, ctype_alpha, ctype_cntrl, ctype_digit, ctype_graph, ctype_lower, ctype_print, ctype_punct, ctype_space, ctype_upper, ctype_xdigit, current, date, debug_backtrace, debug_zval_dump, decbin, dechex, decoct, define, defined, dir, dirname, dl, doubleval, each, end, ereg, ereg_replace, eregi, eregi_replace, error_log, error_reporting, escapeshellarg, escapeshellcmd, exec, explode, extension_loaded, extract, fclose, feof, fflush, fgetc, fgetcsv, fgets, fgetss, file, file_exists, file_get_contents, fileatime, filectime, filegroup, fileinode, filemtime, fileowner, fileperms, filesize, filetype, floatval, flock, floor, flush, fmod, fnmatch, fopen, fpassthru, fputs, fread, fscanf, fseek, fsockopen, fstat, ftell, ftok, ftruncate, func_get_arg, func_get_args, func_num_args, fwrite, get_browser, get_cfg_var, get_declared_classes, get_extension_funcs, get_include_path, get_loaded_extensions, get_magic_quotes_gpc, get_magic_quotes_runtime, get_meta_tags, getallheaders, getcwd, getdate, getenv, getimagesize, getopt, getrandmax, getrusage, gettimeofday, gettype, glob, global, gmdate, gmmktime, gmstrftime, header, headers_sent, hebrev, hebrevc, hexdec, highlight_file, highlight_string, html_entity_decode, htmlentities, htmlspecialchars, ignore_user_abort, image_type_to_mime_type, implode, import_request_variables, in_array, ini_alter, ini_get, ini_get_all, ini_restore, ini_set, intval, ip2long, is_array, is_bool, is_dir, is_double, is_executable, is_file, is_finite, is_float, is_infinite, is_int, is_integer, is_link, is_long, is_nan, is_null, is_numeric, is_object, is_readable, is_real, is_resource, is_scalar, is_string, is_uploaded_file, is_writable, is_writeable, join, key, key_exists, krsort, ksort, link, linkinfo, localeconv, localtime, long2ip, lstat, ltrim, magic_quotes_runtime, mail, max, md5, md5_file, memory_get_usage, microtime, min, mkdir, mktime, move_uploaded_file, mt_getrandmax, mt_rand, mt_srand, natcasesort, natsort, next, nl2br, number_format, ob_clean, ob_end_clean, ob_end_flush, ob_flush, ob_get_clean, ob_get_contents, ob_get_flush, ob_get_length, ob_get_level, ob_get_status, ob_implicit_flush, ob_list_handlers, ob_start, octdec, opendir, overload, pack, parse_ini_file, parse_str, parse_url, passthru, pathinfo, pclose, pfsockopen, pg_affected_rows, pg_cancel_query, pg_client_encoding, pg_close, pg_cmdtuples, pg_connect, pg_connection_busy, pg_connection_reset, pg_connection_status, pg_convert, pg_copy_from, pg_copy_to, pg_dbname, pg_delete, pg_end_copy, pg_errormessage, pg_escape_bytea, pg_escape_string, pg_exec, pg_fetch_all, pg_fetch_array, pg_fetch_assoc, pg_fetch_object, pg_fetch_result, pg_fetch_row, pg_field_is_null, pg_field_name, pg_field_num, pg_field_prtlen, pg_field_size, pg_field_type, pg_fieldisnull, pg_fieldname, pg_fieldnum, pg_fieldprtlen, pg_fieldsize, pg_fieldtype, pg_free_result, pg_freeresult, pg_get_notify, pg_get_pid, pg_get_result, pg_getlastoid, pg_host, pg_insert, pg_last_error, pg_last_notice, pg_last_oid, pg_lo_close, pg_lo_create, pg_lo_export, pg_lo_import, pg_lo_open, pg_lo_read, pg_lo_read_all, pg_lo_seek, pg_lo_tell, pg_lo_unlink, pg_lo_write, pg_loclose, pg_locreate, pg_loexport, pg_loimport, pg_loopen, pg_loread, pg_loreadall, pg_lounlink, pg_lowrite, pg_meta_data, pg_num_fields, pg_num_rows, pg_numfields, pg_numrows, pg_options, pg_pconnect, pg_ping, pg_port, pg_put_line, pg_query, pg_result, pg_result_error, pg_result_seek, pg_result_status, pg_select, pg_send_query, pg_set_client_encoding, pg_trace, pg_tty, pg_unescape_bytea, pg_untrace, pg_update, phpcredits, phpinfo, phpversion, popen, pos, preg_grep, preg_match, preg_match_all, preg_quote, preg_replace, preg_replace_callback, preg_split, prev, print_r, printf, proc_close, proc_open, putenv, quoted_printable_decode, quotemeta, rand, range, rawurldecode, rawurlencode, readdir, readfile, readlink, realpath, rename, reset, restore_error_handler, restore_include_path, rewind, rewinddir, rmdir, round, rsort, rtrim, serialize, session_cache_expire, session_cache_limiter, session_decode, session_destroy, session_encode, session_get_cookie_params, session_id, session_is_registered, session_module_name, session_name, session_regenerate_id, session_register, session_save_path, session_set_cookie_params, session_set_save_handler, session_start, session_unregister, session_unset, session_write_close, set_error_handler, set_file_buffer, set_include_path, set_magic_quotes_runtime, set_socket_blocking, set_time_limit, setcookie, setlocale, settype, shell_exec, show_source, shuffle, similar_text, sizeof, sleep, socket_get_status, socket_set_blocking, socket_set_timeout, sort, split, spliti, sprintf, sql_regcase, srand, sscanf, stat, static, str_pad, str_repeat, str_replace, str_rot13, str_shuffle, str_word_count, strcasecmp, strchr, strcmp, strcoll, strcspn, stream_context_create, stream_context_get_options, stream_context_set_option, stream_context_set_params, stream_filter_append, stream_filter_prepend, stream_get_meta_data, stream_register_wrapper, stream_select, stream_set_blocking, stream_set_timeout, stream_set_write_buffer, stream_wrapper_register, strftime, strip_tags, stripcslashes, stripslashes, stristr, strlen, strnatcasecmp, strnatcmp, strncasecmp, strncmp, strpos, strrchr, strrev, strrpos, strspn, strstr, strtok, strtolower, strtotime, strtoupper, strtr, strval, substr, substr_count, substr_replace, system, tempnam, time, tmpfile, touch, trigger_error, trim, uasort, ucfirst, ucwords, uksort, umask, uniqid, unlink, unpack, unserialize, urldecode, urlencode, user_error, usleep, usort, var_dump, var_export, version_compare, virtual, vprintf, vsprintf, wordwrap",alias:"kw2"},database:{csv:"mysql, mysql_affected_rows, mysql_client_encoding, mysql_close, mysql_connect, mysql_create_db, mysql_createdb, mysql_data_seek, mysql_db_name, mysql_db_query, mysql_dbname, mysql_drop_db, mysql_dropdb, mysql_errno, mysql_error, mysql_escape_string, mysql_fetch_array, mysql_fetch_assoc, mysql_fetch_field, mysql_fetch_lengths, mysql_fetch_object, mysql_fetch_row, mysql_field_flags, mysql_field_len, mysql_field_name, mysql_field_seek, mysql_field_table, mysql_field_type, mysql_fieldflags, mysql_fieldlen, mysql_fieldname, mysql_fieldtable, mysql_fieldtype, mysql_free_result, mysql_freeresult, mysql_get_client_info, mysql_get_host_info, mysql_get_proto_info, mysql_get_server_info, mysql_info, mysql_insert_id, mysql_list_dbs, mysql_list_fields, mysql_list_processes, mysql_list_tables, mysql_listdbs, mysql_listfields, mysql_listtables, mysql_num_fields, mysql_num_rows, mysql_numfields, mysql_numrows, mysql_pconnect, mysql_query, mysql_real_escape_string, mysql_result, mysql_select_db, mysql_selectdb, mysql_stat, mysql_table_name, mysql_tablename, mysql_thread_id, mysql_unbuffered_query, mysqli, mysqli_affected_rows, mysqli_autocommit, mysqli_bind_param, mysqli_bind_result, mysqli_change_user, mysqli_character_set_name, mysqli_client_encoding, mysqli_close, mysqli_commit, mysqli_connect, mysqli_data_seek, mysqli_debug, mysqli_disable_reads_from_master, mysqli_disable_rpl_parse, mysqli_dump_debug_info, mysqli_enable_reads_from_master, mysqli_enable_rpl_parse, mysqli_errno, mysqli_error, mysqli_escape_string, mysqli_execute, mysqli_fetch, mysqli_fetch_array, mysqli_fetch_assoc, mysqli_fetch_field, mysqli_fetch_field_direct, mysqli_fetch_fields, mysqli_fetch_lengths, mysqli_fetch_object, mysqli_fetch_row, mysqli_field_count, mysqli_field_seek, mysqli_field_tell, mysqli_free_result, mysqli_get_client_info, mysqli_get_host_info, mysqli_get_proto_info, mysqli_get_server_info, mysqli_get_server_version, mysqli_info, mysqli_init, mysqli_insert_id, mysqli_kill, mysqli_master_query, mysqli_num_fields, mysqli_num_rows, mysqli_options, mysqli_param_count, mysqli_ping, mysqli_prepare, mysqli_prepare_result, mysqli_profiler, mysqli_query, mysqli_read_query_result, mysqli_real_connect, mysqli_real_escape_string, mysqli_real_query, mysqli_reload, mysqli_rollback, mysqli_rpl_parse_enabled, mysqli_rpl_probe, mysqli_rpl_query_type, mysqli_select_db, mysqli_send_long_data, mysqli_send_query, mysqli_set_opt, mysqli_slave_query, mysqli_ssl_set, mysqli_stat, mysqli_stmt_affected_rows, mysqli_stmt_close, mysqli_stmt_errno, mysqli_stmt_error, mysqli_stmt_store_result, mysqli_store_result, mysqli_thread_id, mysqli_thread_safe, mysqli_use_result, mysqli_warning_count",alias:"kw2"}}),this.patterns=new Hash({slashComments:{pattern:this.common.slashComments,alias:"co1"},multiComments:{pattern:this.common.multiComments,alias:"co2"},strings:{pattern:this.common.strings,alias:"st0"},heredocs:{pattern:/(<<<\s*?(\'?)([A-Z0-9]+)\2[^\n]*?\n[\s\S]*?\n\3(?![A-Z0-9\s]))/gim,alias:"st1"},numbers:{pattern:/\b((([0-9]+)?\.)?[0-9_]+([e][\-+]?[0-9]+)?|0x[A-F0-9]+)\b/gi,alias:"nu0"},variables:{pattern:/[\$]{1,2}[A-Z_][\w]*/gim,alias:"kw3"},functions:{pattern:this.common.functionCalls,alias:"me1"},constants:{pattern:/\b[A-Za-z_][\w]*\b/g,alias:"kw4"},methods:{pattern:/->([\w]+)/gim,alias:"kw3"},brackets:{pattern:this.common.brackets,alias:"br0"}}),this.delimiters=new Hash({start:this.strictRegExp("<?php","<?=","<%",'<script language="php">'),end:this.strictRegExp("?>","%>","</script>")}),this.parent(e,t,n)}}),Fuel.shell=new Class({Extends:Fuel,language:"shell",initialize:function(e,t){this.keywords=new Hash({keywords:{csv:"if, fi, then, elif, else, for, do, done, until, while, break, continue, case, function, return, in, eq, ne, gt, lt, ge, le",alias:"kw0"},commands:{csv:"alias, apropos, awk, bash, bc, bg, builtin, bzip2, cal, cat, cd, cfdisk, chgrp, chmod, chown, chrootcksum, clear, cmp, comm, command, cp, cron, crontab, csplit, cut, date, dc, dd, ddrescue, declare, df, diff, diff3, dig, dir, dircolors, dirname, dirs, du, echo, egrep, eject, enable, env, ethtool, eval, exec, exit, expand, export, expr, false, fdformat, fdisk, fg, fgrep, file, find, fmt, fold, format, free, fsck, ftp, gawk, getopts, grep, groups, gzip, hash, head, history, hostname, id, ifconfig, import, install, join, kill, less, let, ln, local, locate, logname, logout, look, lpc, lpr, lprint, lprintd, lprintq, lprm, ls, lsof, make, man, mkdir, mkfifo, mkisofs, mknod, more, mount, mtools, mv, netstat, nice, nl, nohup, nslookup, open, op, passwd, paste, pathchk, ping, popd, pr, printcap, printenv, printf, ps, pushd, pwd, quota, quotacheck, quotactl, ram, rcp, read, readonly, renice, remsync, rm, rmdir, rsync, screen, scp, sdiff, sed, select, seq, set, sftp, shift, shopt, shutdown, sleep, sort, source, split, ssh, strace, su, sudo, sum, symlink, sync, tail, tar, tee, test, time, times, touch, top, traceroute, trap, tr, true, tsort, tty, type, ulimit, umask, umount, unalias, uname, unexpand, uniq, units, unset, unshar, useradd, usermod, users, uuencode, uudecode, v, vdir, vi, watch, wc, whereis, which, who, whoami, wget, xargs, yes",alias:"kw1"}}),this.patterns=new Hash({poundComments:{pattern:this.common.poundComments,alias:"co0"},strings:{pattern:this.common.strings,alias:"st0"}}),this.parent(e,t)}}),Fuel.sql=new Class({Extends:Fuel,language:"sql",initialize:function(e,t){this.keywords=new Hash({keywords:{csv:"absolute, action, add, after, alter, as, asc, at, authorization, begin, bigint, binary, bit, by, cascade, char, character, check, checkpoint, close, collate, column, commit, committed, connect, connection, constraint, contains, continue, create, cube, current, current_date, current_time, cursor, database, date, deallocate, dec, decimal, declare, default, delete, desc, distinct, double, drop, dynamic, else, end, end-exec, escape, except, exec, execute, false, fetch, first, float, for, force, foreign, forward, free, from, full, function, global, goto, grant, group, grouping, having, hour, ignore, index, inner, insensitive, insert, instead, int, integer, intersect, into, is, isolation, key, last, level, load, local, max, min, minute, modify, move, name, national, nchar, next, no, numeric, of, off, on, only, open, option, order, out, output, partial, password, precision, prepare, primary, prior, privileges, procedure, public, read, real, references, relative, repeatable, restrict, return, returns, revoke, rollback, rollup, rows, rule, schema, scroll, second, section, select, sequence, serializable, set, size, smallint, static, statistics, table, temp, temporary, then, time, timestamp, to, top, transaction, translation, trigger, true, truncate, uncommitted, union, unique, update, values, varchar, varying, view, when, where, with, work"
,alias:"kw1",mod:"gi"},functions:{csv:"abs, avg, case, cast, coalesce, convert, count, current_timestamp, current_user, day, isnull, left, lower, month, nullif, replace, right, session_user, space, substring, sum, system_user, upper, user, year",alias:"kw2",mod:"gi"},operators:{csv:"all, and, any, between, cross, in, join, like, not, null, or, outer, some",alias:"kw3",mod:"gi"}}),this.patterns=new Hash({singleLineComments:{pattern:/--(.*)$/gm,alias:"co0"},multiLineComments:{pattern:this.common.multiComments,alias:"co1"},multiLineStrings:{pattern:this.common.multiLineStrings,alias:"st0"}}),this.parent(e,t)}});